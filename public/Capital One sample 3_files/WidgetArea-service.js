define(["require","exports","angular"],function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t,i,n,a,r,o,s,u,g,l,d,c,f){var m=this;this.featureToggleFactory=e,this._=t,this.summaryService=i,this.EaseConstant=n,this.stepService=a,this.$log=r,this.$q=o,this.easeCoreFiles=s,this.$ocLazyLoad=u,this.VirtualCardsWidgetService=g,this.EASEUtilsFactory=l,this.creditKeeperUtils=d,this.HarmonyWidgetService=c,this.angularElementsUtils=f,this.featureToggleData=[],this.isAccountSetupEligible=function(){return m.stepService.steps||m.stepService.getIsInitialized()?m.stepService.showAccountSetUpWidget:m.stepService.initSteps({stepFlowMode:"widget"}).then(function(){return m.stepService.showAccountSetUpWidget},function(e){return m.$log.warn("Error initializing steps for ASU widget.",e),!1})},this.isATMFinderEligible=function(){return m._isBankAccount()},this.isCreditWiseEligible=function(){return m.EASEUtilsFactory.isCanada()?m.creditKeeperUtils.isUserCKEligible():Promise.resolve(!0)},this.isVirtualCardsEligible=function(){return m.VirtualCardsWidgetService.areVirtualCardCallsSuccessful(m.accountSummaryData)},this.isHarmonyWidgetEligible=function(){return m.HarmonyWidgetService.isEligibleForHarmonyWidget()},this.isRewardsWidgetEligible=function(){return m.accountSummaryData.accounts.some(function(e){return!!e.reward})},this.lazyLoadAccountSetup=function(){return m.$ocLazyLoad.load({name:"AccountSetUpWidgetModule",files:[m.easeCoreFiles.getFile("features/Widgets/AccountSetUp/AccountSetUpWidget-module.js"),m.easeCoreFiles.getFile("features/Widgets/Component/easeWidget-component.js"),m.easeCoreFiles.getFile("features/Widgets/Component/easeWidget-controller.js"),m.easeCoreFiles.getFile("features/Widgets/AccountSetUp/AccountSetUpWidget-component.js"),m.easeCoreFiles.getFile("features/Widgets/AccountSetUp/AccountSetUpWidget-service.js"),m.easeCoreFiles.getFile("features/Widgets/AccountSetUp/AccountSetUpWidget-controller.js")],serie:!0}).then(function(){return!0},function(e){return m.$log.warn("Error loading AccountSetUpWidget dependencies:"+e),!1})},this.lazyLoadAngularAccountSetup=function(){return m.angularElementsUtils.getAngularElementsDependencies().then(function(){return m.angularElementsUtils.getAngularElementsFeature(["ease-web-core-account-setup-widget"])})},this.lazyLoadAngularRewardsWidget=function(){return m.angularElementsUtils.getAngularElementsDependencies().then(function(){return m.angularElementsUtils.getAngularElementsFeature(["ease-web-core-rewards-widget"])})},this.lazyLoadAtmFinder=function(){return m.$ocLazyLoad.load({name:"AtmFinderWidgetModule",files:m.easeCoreFiles.getFiles(m.EaseConstant.kFilePathLists.atmFinderWidget),serie:!0}).then(function(){return!0},function(e){return m.$log.warn("Error loading AtmFinderWidget dependencies: "+e),!1})},this.lazyLoadVirtualCards=function(){return m.$ocLazyLoad.load({name:"VirtualCardsWidgetModule",files:m.easeCoreFiles.getFiles(m.EaseConstant.kFilePathLists.virtualCardsWidget),serie:!0}).then(function(){return!0},function(e){return m.$log.warn("Error loading VirtualCardsWidget dependencies: "+e),!1})},this.lazyLoadCreditWise=function(){return m.$ocLazyLoad.load({name:"CreditWiseWidgetModule",files:m.easeCoreFiles.getFiles(m.EaseConstant.kFilePathLists.creditWiseWidget),serie:!0}).then(function(){return!0},function(e){return m.$log.warn("Error loading CreditWiseWidget dependencies: "+e),!1})},this.lazyLoadHarmonyWidget=function(){return m.$ocLazyLoad.load({name:"HarmonyWidgetModule",serie:!0,files:m.easeCoreFiles.getFiles(m.EaseConstant.kFilePathLists.harmonyWidget)}).then(function(){return!0},function(e){return m.$log.warn("Error loading harmony widget dependencies: "+e),!1})},this.getFeatureToggleData=function(){return m.featureToggleData},this.getFeatureTogglePromise=function(){return m.featureTogglePromise||(m.featureTogglePromise=m._initializeFeatureTogglePromise()),m.featureTogglePromise},this.getAccountSummaryPromise=function(){return m.accountSummaryPromise||(m.accountSummaryPromise=m._initializeAccountSummaryData()),m.accountSummaryPromise},this.getWidgets=function(){return m.widgets},this.prioritizeWidgets=function(e){return m._.sortBy(e,"order")},this.getEligibleWidgets=function(){var e,t=[];return m.widgets&&m.widgets.forEach(function(e){t.push(m._getEligibleWidgetHelper(e))}),m.$q.all(t).then(function(t){return e=t.filter(function(e){return"undefined"!=typeof e?e:void 0}),m.prioritizeWidgets(e)})},this.isWidgetEligible=function(e){var t=m.getWidgetDefinition(e);return t.featureToggle&&t.eligibilityFunction()},this.getWidgetDefinition=function(e){return m._.find(m.widgets,function(t){return t.name===e?t:void 0})},this._getEligibleWidgetHelper=function(e){return m.$q(function(t,i){e.featureToggle?m._getEligibiltyFunctionPromise(e.eligibilityFunction).then(function(i){i?t(e):t()},function(){t()})["catch"](function(){t()}):t()})},this._getEligibiltyFunctionPromise=function(e){return m.$q(function(t,i){t(e())})},this._initializeFeatureTogglePromise=function(){return m.featureToggleFactory.initializeFeatureToggleData().then(function(e){return m.featureToggleData=e,m.featureToggleData})},this._initializeAccountSummaryData=function(){return m.summaryService.get()},this._isBankAccount=function(){return m._.find(m.accountSummaryData.accounts,function(e){return"MMA"===e.category||"SA"===e.category||"DDA"===e.category})},this._getAccountSetupWidgetDefinition=function(){return m.featureToggleData[m.EaseConstant.features.enableAngularAccountSetUpWidget]?{name:"AccountSetup",tag:'<div class="widget" ng-if="widgetArea.stepService.showAccountSetUpWidget"> <c1-element-core-features-account-setup-widget></c1-element-core-features-account-setup-widget> </div>',featureToggle:m.featureToggleData[m.EaseConstant.features.enableSteps]&&m.featureToggleData[m.EaseConstant.features.enableAngularAccountSetUpWidget],eligibilityFunction:m.isAccountSetupEligible,order:1,lazyLoadFunction:m.lazyLoadAngularAccountSetup}:{name:"AccountSetup",tag:'<div class="widget" ng-if="widgetArea.stepService.showAccountSetUpWidget"> <account-set-up-widget></account-set-up-widget> </div>',featureToggle:m.featureToggleData[m.EaseConstant.features.enableSteps]&&m.featureToggleData[m.EaseConstant.features.enableAccountSetUpWidget],eligibilityFunction:m.isAccountSetupEligible,order:1,lazyLoadFunction:m.lazyLoadAccountSetup}},this._setWidgets=function(){m.accountSetupWidgetDefinition=m._getAccountSetupWidgetDefinition(),m.atmFinderWidgetDefinition={name:"ATMFinder",tag:'<div class="widget"><atm-finder-widget></atm-finder-widget></div>',featureToggle:m.featureToggleData[m.EaseConstant.features.enableATMFinder],eligibilityFunction:m.isATMFinderEligible,order:2,lazyLoadFunction:m.lazyLoadAtmFinder},m.creditWiseWidgetDefinition={name:m.EASEUtilsFactory.isCanada()?"CreditKeeper":"CreditWise",tag:'<div id="creditwiseWidget" class="widget"><credit-wise-widget></credit-wise-widget></div>',featureToggle:m.EASEUtilsFactory.isCanada()?m.featureToggleData[m.EaseConstant.features.enableCreditKeeper]:m.featureToggleData[m.EaseConstant.features.enableCreditWise],eligibilityFunction:m.isCreditWiseEligible,order:3,lazyLoadFunction:m.lazyLoadCreditWise},m.virtualCardsWidgetDefinition={name:"VirtualCards",tag:'<div class="widget"><virtual-cards-widget></virtual-cards-widget></div>',featureToggle:m.featureToggleData[m.EaseConstant.features.enableVirtualCardsWidget]&&m.featureToggleData[m.EaseConstant.features.virtualCards],eligibilityFunction:m.isVirtualCardsEligible,order:5,lazyLoadFunction:m.lazyLoadVirtualCards},m.harmonyWidgetDefinition={name:"Harmony",tag:'<div class="widget"><harmony-widget></harmony-widget></div>',featureToggle:m.featureToggleData[m.EaseConstant.features.enableHarmonyWidget],eligibilityFunction:m.isHarmonyWidgetEligible,order:6,lazyLoadFunction:m.lazyLoadHarmonyWidget},m.rewardsWidgetDefinition={name:"Rewards",tag:'<div class="widget"><c1-element-core-features-rewards-widget></c1-element-core-features-rewards-widget></div>',featureToggle:m.featureToggleData[m.EaseConstant.features.enableRewardsWidget],eligibilityFunction:m.isRewardsWidgetEligible,order:2,lazyLoadFunction:m.lazyLoadAngularRewardsWidget},m.widgets=[m.accountSetupWidgetDefinition,m.rewardsWidgetDefinition,m.atmFinderWidgetDefinition,m.creditWiseWidgetDefinition,m.virtualCardsWidgetDefinition,m.harmonyWidgetDefinition]},this.getFeatureTogglePromise().then(function(){m.getAccountSummaryPromise().then(function(e){m.accountSummaryData=e,m._setWidgets()})})}return e.$inject=["featureToggleFactory","_","summaryService","EaseConstant","stepService","$log","$q","easeCoreFiles","$ocLazyLoad","VirtualCardsWidgetService","EASEUtilsFactory","creditKeeperUtils","HarmonyWidgetService","angularElementsUtils"],e}();t.WidgetAreaService=n,i.module("WidgetAreaModule").service("widgetAreaService",n)});